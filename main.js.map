{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\r\n\r\n// Отвечает за переключение компонентов (м-ду таблицей и профилем)\r\n@Component({\r\n    selector: 'app-root',\r\n    template: `\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\" *ngIf=\"!openProfileFlag\">\r\n                    <h1>Сотрудники</h1>\r\n                    <button type=\"button\" class=\"btn btn-success mb-2\" (click)=\"openProfile()\">Добавить</button>\r\n                    <app-list (changeUserProfile)=\"openProfile($event)\"></app-list>\r\n                </div>\r\n                <div class=\"col-12\" *ngIf=\"openProfileFlag\">\r\n                    <h1>Профиль</h1>\r\n                    <app-accaunt (closeProfile)=\"closeProfile()\" [userId]=\"changeUserId\"></app-accaunt>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    `,\r\n})\r\nexport class AppComponent {\r\n    changeUserId = null;\r\n    openProfileFlag = false;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    // Открываем профиль (форму)\r\n    openProfile(userId = null) {\r\n        this.changeUserId = userId;\r\n        this.openProfileFlag = true;\r\n    }\r\n\r\n    // Закрываем профиль (форму)\r\n    closeProfile() {\r\n        this.openProfileFlag = false;\r\n    }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {DataService} from './services/data.service';\r\nimport {ProfileComponent} from './components/profile/profile.component';\r\nimport { ListComponent } from './components/list/list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProfileComponent,\r\n    ListComponent,\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n      DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \".tg {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    margin: 0 0 3em 0;\\r\\n    padding: 0;\\r\\n    box-shadow: 0 0 40px rgba(0, 0, 0, 0.2);\\r\\n}\\r\\n.tg .tg-row {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n}\\r\\n.tg .tg-row .tg-cell {\\r\\n    box-sizing: border-box;\\r\\n    flex-grow: 1;\\r\\n    padding: 0.8em 1.2em;\\r\\n    overflow: hidden;\\r\\n    list-style: none;\\r\\n}\\r\\n.tg-cell {\\r\\n    border-top: 1px solid #d4d4d4;\\r\\n}\\r\\n.tg .tg-row .tg-cell.column-heading {\\r\\n    background-color: #43bac0;\\r\\n    color: white;\\r\\n    padding: 1em;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCx3Q0FBd0M7Q0FDM0M7QUFDRDtJQUNJLFlBQVk7SUFDWixjQUFjO0NBQ2pCO0FBQ0Q7SUFDSSx1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsaUJBQWlCO0NBQ3BCO0FBRUQ7SUFDSSw4QkFBOEI7Q0FDakM7QUFFRDtJQUNJLDBCQUEwQjtJQUMxQixhQUFhO0lBQ2IsYUFBYTtDQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGcge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIG1hcmdpbjogMCAwIDNlbSAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCA0MHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxufVxyXG4udGcgLnRnLXJvdyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuLnRnIC50Zy1yb3cgLnRnLWNlbGwge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGZsZXgtZ3JvdzogMTtcclxuICAgIHBhZGRpbmc6IDAuOGVtIDEuMmVtO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi50Zy1jZWxsIHtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZDRkNGQ0O1xyXG59XHJcblxyXG4udGcgLnRnLXJvdyAudGctY2VsbC5jb2x1bW4taGVhZGluZyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDNiYWMwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"tg\\\">\\n    <div class=\\\"tg-row\\\">\\n        <div class=\\\"tg-cell column-heading\\\" [ngStyle]=\\\"{width: '10%'}\\\">#</div>\\n        <div class=\\\"tg-cell column-heading\\\" [ngStyle]=\\\"{width: '30%'}\\\">Имя Фамилия Отчество</div>\\n        <div class=\\\"tg-cell column-heading\\\" [ngStyle]=\\\"{width: '20%'}\\\">Должность</div>\\n        <div class=\\\"tg-cell column-heading\\\" [ngStyle]=\\\"{width: '20%'}\\\">Дата рождения</div>\\n        <div class=\\\"tg-cell column-heading\\\" [ngStyle]=\\\"{width: '10%'}\\\">Статус</div>\\n        <div class=\\\"tg-cell column-heading\\\" [ngStyle]=\\\"{width: '10%'}\\\"><i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> add</div>\\n    </div>\\n\\n    <div class=\\\"tg-row\\\" *ngFor=\\\"let user of users | async;let i = index\\\">\\n        <div class=\\\"tg-cell\\\" [ngStyle]=\\\"{width: '10%'}\\\">{{i+1}}</div>\\n        <div class=\\\"tg-cell\\\" [ngStyle]=\\\"{width: '30%'}\\\">{{user.firstName}} {{user.secondName}} {{user.lastName}}</div>\\n        <div class=\\\"tg-cell\\\" [ngStyle]=\\\"{width: '20%'}\\\">{{user.role}}</div>\\n        <div class=\\\"tg-cell\\\" [ngStyle]=\\\"{width: '20%'}\\\">{{user.dateBorn | date:\\\"dd-MM-yyyy\\\"}}</div>\\n        <div class=\\\"tg-cell\\\" [ngStyle]=\\\"{width: '10%'}\\\">{{user.statusWork}}</div>\\n        <div class=\\\"tg-cell\\\" [ngStyle]=\\\"{width: '10%'}\\\">\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                <i class=\\\"fa fa-address-card-o btn btn-primary\\\" (click)=\\\"openInfoUser(user.id)\\\"></i>\\n                <i class=\\\"fa fa-trash-o btn btn-danger\\\" (click)=\\\"deleteUser(user.id)\\\"></i>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent {\n\n    @Output() changeUserProfile: EventEmitter<any> = new EventEmitter<any>();\n\n    users: BehaviorSubject<any>;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    this.users = this.dataService.userList;\n  }\n\n  openInfoUser(userId: number) {\n    // выходное событие с ID пользователя\n    this.changeUserProfile.emit(userId);\n  }\n\n  deleteUser(userId: number) {\n    this.dataService.deleteUser(userId);\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"myForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Фамилия</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"secondName\\\"/>\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"myForm.controls['secondName'].invalid && myForm.controls['secondName'].touched\\\">\\r\\n            Обязательно к заполнению\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Имя</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\"/>\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"myForm.controls['firstName'].invalid && myForm.controls['firstName'].touched\\\">\\r\\n            Обязательно к заполнению\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Отчество</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\"/>\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"myForm.controls['lastName'].invalid && myForm.controls['lastName'].touched\\\">\\r\\n            Обязательно к заполнению\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Должность</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"role\\\"/>\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"myForm.controls['role'].invalid && myForm.controls['role'].touched\\\">\\r\\n            Обязательно к заполнению\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Дата рождения</label>\\r\\n        <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"dateBorn\\\"/>\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"myForm.controls['dateBorn'].invalid && myForm.controls['dateBorn'].touched\\\">\\r\\n            Обязательно к заполнению\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Статус</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"statusWork\\\"/>\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"myForm.controls['statusWork'].invalid && myForm.controls['statusWork'].touched\\\">\\r\\n            Обязательно к заполнению\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group col-6\\\">\\r\\n            <label>Ссылка на Фото</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"photo\\\"/>\\r\\n            <img src=\\\"{{myForm.controls.photo.value}}\\\" class=\\\"rounded img-fluid d-block col\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-6\\\">\\r\\n            <label>Коментарий</label>\\r\\n            <textarea class=\\\"form-control\\\" formControlName=\\\"comment\\\"></textarea>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveUser()\\\" >Сохранить</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-light ml-2\\\"(click)=\\\"cancel()\\\">Отмена</button>\\r\\n</form>\\r\\n\\r\\n\"","import {Component, OnInit, Input, EventEmitter, Output} from '@angular/core';\r\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport {DataService, UserModels} from '../../services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-accaunt',\r\n    templateUrl: './profile.component.html',\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n    @Input() userId: number;\r\n    @Output() closeProfile: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n\r\n    myForm: FormGroup = new FormGroup({\r\n            firstName:  new FormControl('', [Validators.required]),\r\n            secondName:  new FormControl('', [Validators.required]),\r\n            lastName: new FormControl('', [Validators.required]),\r\n            role: new FormControl('', [Validators.required]),\r\n            dateBorn: new FormControl('', [Validators.required]),\r\n            statusWork: new FormControl('', [Validators.required]),\r\n            photo: new FormControl('', []),\r\n            comment: new FormControl('', []),\r\n    });\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initForm();\r\n    }\r\n\r\n    // Добавление (сетим) данных в форму\r\n    initForm() {\r\n        let user: any = null;\r\n        if (this.userId) {\r\n            this.dataService.userList.value.forEach((item: UserModels) => {\r\n                if (item.id === this.userId) {\r\n                    user = item;\r\n                }\r\n            });\r\n        }\r\n        if (user) {\r\n            this.myForm.patchValue(user);\r\n        }\r\n\r\n    }\r\n\r\n    saveUser() {\r\n        const formData: UserModels = this.myForm.getRawValue();\r\n\r\n        if (this.userId) { // Редактирование\r\n            this.dataService.editUserById(formData, this.userId);\r\n        } else { // обавление поьзователья\r\n            this.dataService.addUser(formData);\r\n        }\r\n\r\n        this.cancel();\r\n    }\r\n\r\n    cancel() {\r\n        this.closeProfile.emit();\r\n    }\r\n}\r\n","import {Injectable, EventEmitter} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport * as moment from 'moment';\r\n\r\nexport interface UserModels {\r\n    id: number;\r\n    firstName: string;\r\n    secondName: string;\r\n    lastName: string;\r\n    role: string;\r\n    dateBorn: any;\r\n    statusWork: any;\r\n    photo: any;\r\n    comment: string;\r\n}\r\n\r\n@Injectable()\r\n\r\nexport class DataService {\r\n\r\n    userList: BehaviorSubject<any> = new BehaviorSubject([]);\r\n\r\n    constructor() {\r\n        const lsUsers = localStorage.getItem('users');\r\n        if (lsUsers !== null) {\r\n            this.userList.next(JSON.parse(lsUsers));\r\n        }\r\n    }\r\n\r\n    deleteUser(userId) {\r\n        const users = this.userList.value.filter((item: UserModels) => {\r\n            if (item.id === userId) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        this.userList.next(users);\r\n        this.saveToLocalStorage();\r\n    }\r\n\r\n    editUserById(formData: UserModels, userId: number) {\r\n\r\n        const newUserList = this.userList.value.map((item: UserModels, i) => {\r\n\r\n            if (item.id === userId) {\r\n                formData.id = userId;\r\n                return formData;\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n\r\n\r\n        this.userList.next(newUserList);\r\n    }\r\n\r\n    addUser(user) {\r\n        if (user) {\r\n            user.id = this.getIdNewUser(); // Получили id\r\n            this.userList.value.push(user);\r\n            this.userList.next(this.userList.value);\r\n            this.saveToLocalStorage();\r\n        }\r\n    }\r\n\r\n    // Сохраняем в ls\r\n    saveToLocalStorage() {\r\n        localStorage.setItem('users', JSON.stringify(this.userList.value));\r\n    }\r\n\r\n    getIdNewUser() {\r\n        let id = 1;\r\n        this.userList.value.forEach(() => {\r\n            id++;\r\n        });\r\n        return id;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}